package test

import (
	"fmt"
	"time"

	"github.com/jinzhu/gorm"
)

// ===== BEGIN of all query sets

// ===== BEGIN of query set BlogQuerySet

// BlogQuerySet is an queryset type for Blog
type BlogQuerySet struct {
	db *gorm.DB
}

// NewBlogQuerySet constructs new BlogQuerySet
func NewBlogQuerySet(db *gorm.DB) BlogQuerySet {
	return BlogQuerySet{
		db: db,
	}
}

// All is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) All(ret *[]Blog) error {
	return qs.db.Find(ret).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtEq(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at = ?", createdAt)
	})
	return qs
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtGt(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at > ?", createdAt)
	})
	return qs
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtGte(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at >= ?", createdAt)
	})
	return qs
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtLt(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at < ?", createdAt)
	})
	return qs
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtLte(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at <= ?", createdAt)
	})
	return qs
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) CreatedAtNe(createdAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at != ?", createdAt)
	})
	return qs
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtEq(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at = ?", deletedAt)
	})
	return qs
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtGt(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at > ?", deletedAt)
	})
	return qs
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtGte(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at >= ?", deletedAt)
	})
	return qs
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtIsNull() BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at IS NULL")
	})
	return qs
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtLt(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at < ?", deletedAt)
	})
	return qs
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtLte(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at <= ?", deletedAt)
	})
	return qs
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) DeletedAtNe(deletedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at != ?", deletedAt)
	})
	return qs
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDEq(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id = ?", ID)
	})
	return qs
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDGt(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id > ?", ID)
	})
	return qs
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDGte(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id >= ?", ID)
	})
	return qs
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDLt(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id < ?", ID)
	})
	return qs
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDLte(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id <= ?", ID)
	})
	return qs
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) IDNe(ID uint) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id != ?", ID)
	})
	return qs
}

// Limit is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) Limit(limit int) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Limit(limit)
	})
	return qs
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameEq(name string) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("name = ?", name)
	})
	return qs
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) NameNe(name string) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("name != ?", name)
	})
	return qs
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs BlogQuerySet) One(ret *Blog) error {
	return qs.db.First(ret).Error
}

// OrderByCreatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderByCreatedAt() BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("created_at")
	})
	return qs
}

// OrderByDeletedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderByDeletedAt() BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("deleted_at")
	})
	return qs
}

// OrderByID is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderByID() BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("id")
	})
	return qs
}

// OrderByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) OrderByUpdatedAt() BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("updated_at")
	})
	return qs
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtEq(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at = ?", updatedAt)
	})
	return qs
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtGt(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at > ?", updatedAt)
	})
	return qs
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtGte(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at >= ?", updatedAt)
	})
	return qs
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtLt(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at < ?", updatedAt)
	})
	return qs
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtLte(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at <= ?", updatedAt)
	})
	return qs
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs BlogQuerySet) UpdatedAtNe(updatedAt time.Time) BlogQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at != ?", updatedAt)
	})
	return qs
}

// ===== END of query set BlogQuerySet

// ===== BEGIN of Blog modifiers

// Create creates Blog
func (o *Blog) Create(db *gorm.DB) error {
	if err := db.Create(o).Error; err != nil {
		return fmt.Errorf("can't create Blog %v: %s", o, err)
	}

	return nil
}

type blogDBSchemaField string

var BlogDBSchema = struct {
	ID        blogDBSchemaField
	CreatedAt blogDBSchemaField
	UpdatedAt blogDBSchemaField
	DeletedAt blogDBSchemaField
	Name      blogDBSchemaField
}{

	ID:        blogDBSchemaField("id"),
	CreatedAt: blogDBSchemaField("created_at"),
	UpdatedAt: blogDBSchemaField("updated_at"),
	DeletedAt: blogDBSchemaField("deleted_at"),
	Name:      blogDBSchemaField("name"),
}

// Update updates Blog fields by primary key
func (o *Blog) Update(db *gorm.DB, fields ...blogDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"name":       o.Name,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := string(f)
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Blog %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ===== END of Blog modifiers

// ===== BEGIN of query set PostQuerySet

// PostQuerySet is an queryset type for Post
type PostQuerySet struct {
	db *gorm.DB
}

// NewPostQuerySet constructs new PostQuerySet
func NewPostQuerySet(db *gorm.DB) PostQuerySet {
	return PostQuerySet{
		db: db,
	}
}

// All is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) All(ret *[]Post) error {
	return qs.db.Find(ret).Error
}

// BlogIsNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) BlogIsNull() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("blog IS NULL")
	})
	return qs
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtEq(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at = ?", createdAt)
	})
	return qs
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtGt(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at > ?", createdAt)
	})
	return qs
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtGte(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at >= ?", createdAt)
	})
	return qs
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtLt(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at < ?", createdAt)
	})
	return qs
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtLte(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at <= ?", createdAt)
	})
	return qs
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) CreatedAtNe(createdAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at != ?", createdAt)
	})
	return qs
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtEq(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at = ?", deletedAt)
	})
	return qs
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtGt(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at > ?", deletedAt)
	})
	return qs
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtGte(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at >= ?", deletedAt)
	})
	return qs
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtIsNull() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at IS NULL")
	})
	return qs
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtLt(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at < ?", deletedAt)
	})
	return qs
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtLte(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at <= ?", deletedAt)
	})
	return qs
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) DeletedAtNe(deletedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at != ?", deletedAt)
	})
	return qs
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDEq(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id = ?", ID)
	})
	return qs
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDGt(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id > ?", ID)
	})
	return qs
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDGte(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id >= ?", ID)
	})
	return qs
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDLt(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id < ?", ID)
	})
	return qs
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDLte(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id <= ?", ID)
	})
	return qs
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) IDNe(ID uint) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id != ?", ID)
	})
	return qs
}

// Limit is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) Limit(limit int) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Limit(limit)
	})
	return qs
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs PostQuerySet) One(ret *Post) error {
	return qs.db.First(ret).Error
}

// OrderByCreatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderByCreatedAt() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("created_at")
	})
	return qs
}

// OrderByDeletedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderByDeletedAt() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("deleted_at")
	})
	return qs
}

// OrderByID is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderByID() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("id")
	})
	return qs
}

// OrderByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) OrderByUpdatedAt() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("updated_at")
	})
	return qs
}

// PreloadBlog is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) PreloadBlog() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Preload("Blog")
	})
	return qs
}

// PreloadUser is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) PreloadUser() PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Preload("User")
	})
	return qs
}

// TitleEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleEq(title string) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("title = ?", title)
	})
	return qs
}

// TitleNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) TitleNe(title string) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("title != ?", title)
	})
	return qs
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtEq(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at = ?", updatedAt)
	})
	return qs
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtGt(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at > ?", updatedAt)
	})
	return qs
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtGte(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at >= ?", updatedAt)
	})
	return qs
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtLt(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at < ?", updatedAt)
	})
	return qs
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtLte(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at <= ?", updatedAt)
	})
	return qs
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs PostQuerySet) UpdatedAtNe(updatedAt time.Time) PostQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at != ?", updatedAt)
	})
	return qs
}

// ===== END of query set PostQuerySet

// ===== BEGIN of Post modifiers

// Create creates Post
func (o *Post) Create(db *gorm.DB) error {
	if err := db.Create(o).Error; err != nil {
		return fmt.Errorf("can't create Post %v: %s", o, err)
	}

	return nil
}

type postDBSchemaField string

var PostDBSchema = struct {
	ID        postDBSchemaField
	CreatedAt postDBSchemaField
	UpdatedAt postDBSchemaField
	DeletedAt postDBSchemaField
	Blog      postDBSchemaField
	User      postDBSchemaField
	Title     postDBSchemaField
}{

	ID:        postDBSchemaField("id"),
	CreatedAt: postDBSchemaField("created_at"),
	UpdatedAt: postDBSchemaField("updated_at"),
	DeletedAt: postDBSchemaField("deleted_at"),
	Blog:      postDBSchemaField("blog"),
	User:      postDBSchemaField("user"),
	Title:     postDBSchemaField("title"),
}

// Update updates Post fields by primary key
func (o *Post) Update(db *gorm.DB, fields ...postDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"blog":       o.Blog,
		"user":       o.User,
		"title":      o.Title,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := string(f)
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update Post %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ===== END of Post modifiers

// ===== BEGIN of query set UserQuerySet

// UserQuerySet is an queryset type for User
type UserQuerySet struct {
	db *gorm.DB
}

// NewUserQuerySet constructs new UserQuerySet
func NewUserQuerySet(db *gorm.DB) UserQuerySet {
	return UserQuerySet{
		db: db,
	}
}

// All is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) All(ret *[]User) error {
	return qs.db.Find(ret).Error
}

// CreatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtEq(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at = ?", createdAt)
	})
	return qs
}

// CreatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGt(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at > ?", createdAt)
	})
	return qs
}

// CreatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtGte(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at >= ?", createdAt)
	})
	return qs
}

// CreatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLt(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at < ?", createdAt)
	})
	return qs
}

// CreatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtLte(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at <= ?", createdAt)
	})
	return qs
}

// CreatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) CreatedAtNe(createdAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("created_at != ?", createdAt)
	})
	return qs
}

// DeletedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtEq(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at = ?", deletedAt)
	})
	return qs
}

// DeletedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGt(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at > ?", deletedAt)
	})
	return qs
}

// DeletedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtGte(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at >= ?", deletedAt)
	})
	return qs
}

// DeletedAtIsNull is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtIsNull() UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at IS NULL")
	})
	return qs
}

// DeletedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLt(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at < ?", deletedAt)
	})
	return qs
}

// DeletedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtLte(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at <= ?", deletedAt)
	})
	return qs
}

// DeletedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) DeletedAtNe(deletedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("deleted_at != ?", deletedAt)
	})
	return qs
}

// IDEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDEq(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id = ?", ID)
	})
	return qs
}

// IDGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGt(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id > ?", ID)
	})
	return qs
}

// IDGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDGte(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id >= ?", ID)
	})
	return qs
}

// IDLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLt(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id < ?", ID)
	})
	return qs
}

// IDLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDLte(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id <= ?", ID)
	})
	return qs
}

// IDNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) IDNe(ID uint) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("id != ?", ID)
	})
	return qs
}

// Limit is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) Limit(limit int) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Limit(limit)
	})
	return qs
}

// NameEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameEq(name string) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("name = ?", name)
	})
	return qs
}

// NameNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) NameNe(name string) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("name != ?", name)
	})
	return qs
}

// One is used to retrieve one result. It returns gorm.ErrRecordNotFound
// if nothing was fetched
func (qs UserQuerySet) One(ret *User) error {
	return qs.db.First(ret).Error
}

// OrderByCreatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderByCreatedAt() UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("created_at")
	})
	return qs
}

// OrderByDeletedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderByDeletedAt() UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("deleted_at")
	})
	return qs
}

// OrderByID is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderByID() UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("id")
	})
	return qs
}

// OrderByUpdatedAt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) OrderByUpdatedAt() UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Order("updated_at")
	})
	return qs
}

// UpdatedAtEq is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtEq(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at = ?", updatedAt)
	})
	return qs
}

// UpdatedAtGt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGt(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at > ?", updatedAt)
	})
	return qs
}

// UpdatedAtGte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtGte(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at >= ?", updatedAt)
	})
	return qs
}

// UpdatedAtLt is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLt(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at < ?", updatedAt)
	})
	return qs
}

// UpdatedAtLte is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtLte(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at <= ?", updatedAt)
	})
	return qs
}

// UpdatedAtNe is an autogenerated method
// nolint: dupl
func (qs UserQuerySet) UpdatedAtNe(updatedAt time.Time) UserQuerySet {
	qs.db = qs.db.Scopes(func(d *gorm.DB) *gorm.DB {
		return d.Where("updated_at != ?", updatedAt)
	})
	return qs
}

// ===== END of query set UserQuerySet

// ===== BEGIN of User modifiers

// Create creates User
func (o *User) Create(db *gorm.DB) error {
	if err := db.Create(o).Error; err != nil {
		return fmt.Errorf("can't create User %v: %s", o, err)
	}

	return nil
}

type userDBSchemaField string

var UserDBSchema = struct {
	ID        userDBSchemaField
	CreatedAt userDBSchemaField
	UpdatedAt userDBSchemaField
	DeletedAt userDBSchemaField
	Name      userDBSchemaField
}{

	ID:        userDBSchemaField("id"),
	CreatedAt: userDBSchemaField("created_at"),
	UpdatedAt: userDBSchemaField("updated_at"),
	DeletedAt: userDBSchemaField("deleted_at"),
	Name:      userDBSchemaField("name"),
}

// Update updates User fields by primary key
func (o *User) Update(db *gorm.DB, fields ...userDBSchemaField) error {
	dbNameToFieldName := map[string]interface{}{
		"id":         o.ID,
		"created_at": o.CreatedAt,
		"updated_at": o.UpdatedAt,
		"deleted_at": o.DeletedAt,
		"name":       o.Name,
	}
	u := map[string]interface{}{}
	for _, f := range fields {
		fs := string(f)
		u[fs] = dbNameToFieldName[fs]
	}
	if err := db.Model(o).Updates(u).Error; err != nil {
		if err == gorm.ErrRecordNotFound {
			return err
		}

		return fmt.Errorf("can't update User %v fields %v: %s",
			o, fields, err)
	}

	return nil
}

// ===== END of User modifiers

// ===== END of all query sets
